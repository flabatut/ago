# {{ ansible_managed }}
# !!! Do not edit this file manually !!!

FROM	alpine:{{ versions.alpine }} AS base_image
RUN		apk --no-cache add \
			python3=={{ versions.apk.python3 }} \
			curl=={{ versions.apk.curl }} \
			ca-certificates=={{ versions.apk.ca_certificates }} \
			git=={{ versions.apk.git }} \
			openssh-client=={{ versions.apk.openssh_client }} \
			rsync=={{ versions.apk.rsync }} \
		&& pip3 install pip=={{ versions.pip.pip }} --upgrade \
		&& pip3 install wheel=={{ versions.pip.wheel }} \
		&& ln -s /usr/bin/python3 /usr/bin/python \
		&& update-ca-certificates

FROM	base_image AS pip_packages
WORKDIR	/build
COPY	requirements.pip.txt .
RUN		apk --no-cache add \
			python3-dev=={{ versions.apk.python3_dev }} \
			gcc=={{ versions.apk.gcc }} \
			musl-dev=={{ versions.apk.musl_dev }} \
			libffi-dev=={{ versions.apk.libffi_dev }} \
			openssl-dev=={{ versions.apk.openssl_dev }} \
		&& pip3 wheel -r requirements.pip.txt

FROM	base_image AS third_party
WORKDIR	/build
RUN		curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" \
		&& chmod +x ./kubectl

FROM    pip_packages
FROM    third_party
FROM	base_image
ARG		BUILD_DATE
ARG		DOCKER_REPO
ARG		VCS_REF
ARG		DOCKER_TAG=latest
COPY	--from=pip_packages /build /wheels
COPY	--from=third_party /build/* /usr/local/bin/
RUN		pip3 install -r /wheels/requirements.pip.txt -f /wheels --no-cache-dir \
	    && rm -rf /wheels \
		&& rm -rf /root/.cache/pip/* \
		&& rm -rf /var/cache/apk/*
LABEL	name=${DOCKER_REPO} \
		version=${DOCKER_TAG} \
		org.label-schema.name=${DOCKER_REPO} \
		org.label-schema.build-date=${BUILD_DATE} \
		org.label-schema.vcs-url=${DOCKER_REPO} \
		org.label-schema.vcs-ref=${VCS_REF} \
		org.label-schema.schema-version=${DOCKER_TAG} \
		org.label-schema.version=${DOCKER_TAG}
